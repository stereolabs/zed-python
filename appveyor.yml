image: Visual Studio 2015
clone_folder: c:\projects\zed-python

environment:
  WORKSPACE: C:\projects
  PYTHON35: "C:\\Python35-x64"
  PYTHON36: "C:\\Python36-x64"
  PYTHON37: "C:\\Python37-x64"
  PYTHON38: "C:\\Python38-x64"

  matrix:
    - ZED_MAJOR: "3"
      ZED_MINOR: "0"
      CUDA_MAJOR: "10"
      CUDA_MINOR: "0"
      ZED_URL_SUFFIX: "win"
      CUDA_URL: https://download.stereolabs.com/cuda%CUDA_MAJOR%/win10
    
    - ZED_MAJOR: "3"
      ZED_MINOR: "0"
      CUDA_MAJOR: "10"
      CUDA_MINOR: "2"
      ZED_URL_SUFFIX: "win"
      CUDA_URL: https://download.stereolabs.com/cuda%CUDA_MAJOR%/win10

    - ZED_MAJOR: "3"
      ZED_MINOR: "0"
      CUDA_MAJOR: "9"
      CUDA_MINOR: "0"
      ZED_URL_SUFFIX: "win"
      CUDA_URL: https://download.stereolabs.com/cuda%CUDA_MAJOR%/win10

install:  
  - cd %WORKSPACE%\
  
  # Install ZED SDK
  - curl -L https://download.stereolabs.com/zedsdk/%ZED_MAJOR%.%ZED_MINOR%/cu%CUDA_MAJOR%%CUDA_MINOR%/%ZED_URL_SUFFIX% -o zed_sdk_setup.exe
  
  # Get innoextract
  - curl -L http://constexpr.org/innoextract/files/innoextract-1.8-windows.zip -o innoextract_setup.zip
  - 7z x innoextract_setup.zip
  - .\innoextract.exe zed_sdk_setup.exe
  - mkdir "C:\Program Files (x86)\ZED SDK"
  - move .\app\bin "C:\Program Files (x86)\ZED SDK\"
  - move .\app\include "C:\Program Files (x86)\ZED SDK\"
  - move .\app\lib "C:\Program Files (x86)\ZED SDK\"
  - set ZED_SDK_ROOT_DIR=C:\Program Files (x86)\ZED SDK
  - set SL_ZED_SDK_INSTALL=C:\Program Files (x86)\ZED SDK
  - set PATH=%ZED_SDK_ROOT_DIR%\bin;%PATH%
  
  # Install CUDA
  - curl -L %CUDA_URL% -o cuda_setup.exe
  - .\cuda_setup.exe -s nvcc_%CUDA_MAJOR%.%CUDA_MINOR%
  - set CUDA_PATH=%ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v%CUDA_MAJOR%.%CUDA_MINOR%
  - set CUDA_PATH_V%CUDA_MAJOR%_%CUDA_MINOR%=%CUDA_PATH%
  - set CUDA_TOOLKIT_ROOT_DIR=%CUDA_PATH%
  - set PATH=%CUDA_PATH%\bin;%PATH%
  - cd %WORKSPACE%\zed-python\
  
  # Python dep
  - "%PYTHON35%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON35%\\python.exe -m pip install -r requirements.txt"

  - "%PYTHON36%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON36%\\python.exe -m pip install -r requirements.txt"

  - "%PYTHON37%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON37%\\python.exe -m pip install -r requirements.txt"

  - "%PYTHON38%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON38%\\python.exe -m pip install -r requirements.txt"

build_script:
  # All python version in one for faster build
  - cd %WORKSPACE%\zed-python\
  
  - "%PYTHON35%\\python.exe setup.py build"
  - "%PYTHON35%\\python.exe -m pip wheel ."
  - "%PYTHON35%\\python.exe setup.py clean"

  - "%PYTHON36%\\python.exe setup.py build"
  - "%PYTHON36%\\python.exe -m pip wheel ."
  - "%PYTHON36%\\python.exe setup.py clean"

  - "%PYTHON37%\\python.exe setup.py build"
  - "%PYTHON37%\\python.exe -m pip wheel ."
  - "%PYTHON37%\\python.exe setup.py clean"

  - "%PYTHON38%\\python.exe setup.py build"
  - "%PYTHON38%\\python.exe -m pip wheel ."
  - "%PYTHON38%\\python.exe setup.py clean"

  - ps: "ls"

artifacts:
  - path: '*.whl'

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse